package Ether.INTRANAV.rest.api.openapi;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple11;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Main extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5060405161456a38038061456a8339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151600180546001600160a01b03199081166001600160a01b0395861617909155600380548216938516939093179092556004805483169484169490941790935560058054909116919092161790556144c8806100a26000396000f3fe6080604052600436106100915760003560e01c8063af0831a611610059578063af0831a6146103d8578063b8972db514610513578063c38f73bb1461051b578063d64880e814610530578063e9c556cf1461054557610091565b806326d4504d14610096578063331f080d146100dd5780633d2eb72b146103125780635d2becd21461039c5780639542cbd7146103c3575b600080fd5b3480156100a257600080fd5b506100c9600480360360208110156100b957600080fd5b50356001600160a01b0316610580565b604080519115158252519081900360200190f35b3480156100e957600080fd5b506101106004803603602081101561010057600080fd5b50356001600160a01b03166108f5565b604080516001600160a01b03808e1682528c1660208201529081018a905263ffffffff808a1660608301528881166080830152871660a082015260c0810160e0820161010083016101208401610140850186600481111561016d57fe5b60ff16815260200185810385528a818151815260200191508051906020019080838360005b838110156101aa578181015183820152602001610192565b50505050905090810190601f1680156101d75780820380516001836020036101000a031916815260200191505b5085810384528951815289516020918201918b019080838360005b8381101561020a5781810151838201526020016101f2565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b5085810383528851815288516020918201918a019080838360005b8381101561026a578181015183820152602001610252565b50505050905090810190601f1680156102975780820380516001836020036101000a031916815260200191505b50858103825287518152875160209182019189019080838360005b838110156102ca5781810151838201526020016102b2565b50505050905090810190601f1680156102f75780820380516001836020036101000a031916815260200191505b509f5050505050505050505050505050505060405180910390f35b34801561031e57600080fd5b50610327610bde565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610361578181015183820152602001610349565b50505050905090810190601f16801561038e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103a857600080fd5b506103b1610c80565b60408051918252519081900360200190f35b3480156103cf57600080fd5b506103b1610c96565b3480156103e457600080fd5b50610511600480360360c08110156103fb57600080fd5b63ffffffff82358116926020810135821692604082013590921691810190608081016060820135600160201b81111561043357600080fd5b82018360208201111561044557600080fd5b803590602001918460018302840111600160201b8311171561046657600080fd5b919390929091602081019035600160201b81111561048357600080fd5b82018360208201111561049557600080fd5b803590602001918460018302840111600160201b831117156104b657600080fd5b919390929091602081019035600160201b8111156104d357600080fd5b8201836020820111156104e557600080fd5b803590602001918460018302840111600160201b8311171561050657600080fd5b509092509050610cbc565b005b6105116110f8565b34801561052757600080fd5b50610110611609565b34801561053c57600080fd5b506105116118e9565b34801561055157600080fd5b506105116004803603604081101561056857600080fd5b506001600160a01b0381351690602001351515611a4a565b600061058a611ea5565b736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756040516105ab90612172565b6001600160a01b03909116815260405190819003602001906000f0801580156105d8573d6000803e3d6000fd5b50600280546001600160a01b039283166001600160a01b031991821617825591841660009081526020819052604081208054841681556001810180549094169093559082018190556003820180546bffffffffffffffffffffffff19169055610644600483018261217f565b61065260058301600061217f565b61066060068301600061217f565b61066e60078301600061217f565b50600801805460ff191690556003546040805163f8a07c2760e01b81526001600160a01b0385811660048301529151919092169163f8a07c2791602480830192600092919082900301818387803b1580156106c857600080fd5b505af11580156106dc573d6000803e3d6000fd5b5050600280546001600160a01b038681166000908152602081815260409182902091516303d655a960e31b8152600481019182526005909201805460001960018216156101000201169590950460248301819052929093169550631eb2ad4894508291604490910190849080156107945780601f1061076957610100808354040283529160200191610794565b820191906000526020600020905b81548152906001019060200180831161077757829003601f168201915b505092505050600060405180830381600087803b1580156107b457600080fd5b505af11580156107c8573d6000803e3d6000fd5b50506004805460408051631484968760e11b81526001600160a01b038881169482019490945290519290911693506329092d0e925060248082019260009290919082900301818387803b15801561081e57600080fd5b505af1158015610832573d6000803e3d6000fd5b50506005546040805163d3a5a03960e01b81526001600160a01b038781166004830152661111531155115160ca1b6024830152915191909216935063d3a5a0399250604480830192600092919082900301818387803b15801561089457600080fd5b505af11580156108a8573d6000803e3d6000fd5b5050604080516020808252600790820152661111531155115160ca1b8183015290516001600160a01b038616935060008051602061447483398151915292509081900360600190a2919050565b600080600080600080606080606080600061090e611ea5565b6001600160a01b038c8116600090815260208181526040918290208054600180830154600280850154600386015460088701546004880180548b516101009882161598909802600019011694909404601f81018a90048a0287018a01909a528986529699958616989390951696909563ffffffff80871696600160201b8104821696600160401b9091049091169460058c019360068d019360078e019360ff909116929091879190830182828015610a075780601f106109dc57610100808354040283529160200191610a07565b820191906000526020600020905b8154815290600101906020018083116109ea57829003601f168201915b5050875460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959a5089945092508401905082828015610a955780601f10610a6a57610100808354040283529160200191610a95565b820191906000526020600020905b815481529060010190602001808311610a7857829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295995088945092508401905082828015610b235780601f10610af857610100808354040283529160200191610b23565b820191906000526020600020905b815481529060010190602001808311610b0657829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295985087945092508401905082828015610bb15780601f10610b8657610100808354040283529160200191610bb1565b820191906000526020600020905b815481529060010190602001808311610b9457829003601f168201915b505050505091509b509b509b509b509b509b509b509b509b509b509b505091939597999b90929496989a50565b336000908152602081815260409182902060040180548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610c755780601f10610c4a57610100808354040283529160200191610c75565b820191906000526020600020905b815481529060010190602001808311610c5857829003601f168201915b505050505090505b90565b3360009081526020819052604090206002015490565b3360009081526020819052604081206008015460ff166004811115610cb757fe5b905090565b610cc46121c3565b3380825263ffffffff808c1660608401528a81166080840152891660a0830152604080516020601f8a01819004810282018101909252888152908990899081908401838280828437600092019190915250505050610100830152604080516020601f8801819004810282018101909252868152908790879081908401838280828437600092019190915250505050610120830152604080516020601f8601819004810282018101909252848152908590859081908401838280828437600092018290525060e087019490945250505061014083018190526001600160a01b0382811682526020828152604092839020855181549084166001600160a01b031991821617825582870151600183018054919095169116179092559184015160028201556060840151600382018054608087015160a088015163ffffffff908116600160401b0263ffffffff60401b19928216600160201b0267ffffffff00000000199290961663ffffffff199094169390931716939093179290921691909117905560c084015180518593610e5f92600485019291019061221c565b5060e08201518051610e7b91600584019160209091019061221c565b506101008201518051610e9891600684019160209091019061221c565b506101208201518051610eb591600784019160209091019061221c565b5061014082015160088201805460ff19166001836004811115610ed457fe5b0217905550506004805460408051637b51e92760e11b81526001600160a01b0386811694820194909452905192909116925063f6a3d24e916024808301926020929190829003018186803b158015610f2b57600080fd5b505afa158015610f3f573d6000803e3d6000fd5b505050506040513d6020811015610f5557600080fd5b505115610fc7576004805460408051631484968760e11b81526001600160a01b0385811694820194909452905192909116916329092d0e9160248082019260009290919082900301818387803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b505050505b6004805460408051630a3b0a4f60e01b81526001600160a01b038581169482019490945290519290911691630a3b0a4f9160248082019260009290919082900301818387803b15801561101957600080fd5b505af115801561102d573d6000803e3d6000fd5b50506005546040805163d3a5a03960e01b81526001600160a01b0386811660048301526a13995dc814995c5d595cdd60aa1b6024830152915191909216935063d3a5a0399250604480830192600092919082900301818387803b15801561109357600080fd5b505af11580156110a7573d6000803e3d6000fd5b5050604080516020808252600c908201526b10dc99585d19549c5d595cdd60a21b81830152905133935060008051602061447483398151915292509081900360600190a25050505050505050505050565b611100611ec7565b336000818152602081905260409020600281015434811461112057600080fd5b6002600883015460ff16600481111561113557fe5b14801561114b575080836001600160a01b031631115b15611531576040805160208082526009908201526839b2b7322a37b5b2b760b91b8183015290516001600160a01b03851691600080516020614474833981519152919081900360600190a26001546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156111cf573d6000803e3d6000fd5b506008820180546003919060ff19166001830217905550600060028084018281556001600160a01b03808716845260208490526040909320855481546001600160a01b03199081169186169190911782556001808801548184018054909316961695909517905590548183015560038086018054918301805463ffffffff191663ffffffff938416178082558254600160201b9081900485160267ffffffff0000000019909116178082559154600160401b9081900490931690920263ffffffff60401b1990911617905560048086018054879593946112c1949386019382161561010002600019019091160461229a565b50600582018160050190805460018160011615610100020316600290046112e992919061229a565b506006820181600601908054600181600116156101000203166002900461131192919061229a565b506007820181600701908054600181600116156101000203166002900461133992919061229a565b50600882810154908201805460ff9092169160ff1916600183600481111561135d57fe5b0217905550506005546040805163d3a5a03960e01b81526001600160a01b038781166004830152631410525160e21b6024830152915191909216925063d3a5a0399160448082019260009290919082900301818387803b1580156113c057600080fd5b505af11580156113d4573d6000803e3d6000fd5b5050604080516020808252600490820152631410525160e21b8183015290516001600160a01b038716935060008051602061447483398151915292509081900360600190a2611421611eeb565b600380546001600160a01b0385811660008181526020819052604080822090950154855163d7c1d2d760e01b81526004810193909352600160201b900463ffffffff1660248301529351919092169263d7c1d2d7926044808201939182900301818387803b15801561149257600080fd5b505af11580156114a6573d6000803e3d6000fd5b50506005546040805163d3a5a03960e01b81526001600160a01b0388811660048301527213995dc813dc99195c8810dbdb5c1b195d1959606a1b6024830152915191909216935063d3a5a0399250604480830192600092919082900301818387803b15801561151457600080fd5b505af1158015611528573d6000803e3d6000fd5b50505050611604565b6005546040805163d3a5a03960e01b81526001600160a01b0386811660048301527224b73b30b634b2103a3930b739b0b1ba34b7b760691b60248301529151919092169163d3a5a03991604480830192600092919082900301818387803b15801561159b57600080fd5b505af11580156115af573d6000803e3d6000fd5b50506040805160208082526013908201527224b73b30b634b2103a3930b739b0b1ba34b7b760691b8183015290516001600160a01b038716935060008051602061447483398151915292509081900360600190a25b505050565b336000908152602081815260408083208054600180830154600280850154600386015460088701546004880180548a516101009882161598909802600019011694909404601f81018b90048b0287018b019099528886528a998a998a998a998a996060998a998a998a998e9996986001600160a01b03968716989690941696919563ffffffff80831696600160201b8404821696600160401b909404909116949360058c019360068d019360078e019360ff90931692918791908301828280156117145780601f106116e957610100808354040283529160200191611714565b820191906000526020600020905b8154815290600101906020018083116116f757829003601f168201915b5050875460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959a50899450925084019050828280156117a25780601f10611777576101008083540402835291602001916117a2565b820191906000526020600020905b81548152906001019060200180831161178557829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959950889450925084019050828280156118305780601f1061180557610100808354040283529160200191611830565b820191906000526020600020905b81548152906001019060200180831161181357829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959850879450925084019050828280156118be5780601f10611893576101008083540402835291602001916118be565b820191906000526020600020905b8154815290600101906020018083116118a157829003601f168201915b505050505091509b509b509b509b509b509b509b509b509b509b509b5050909192939495969798999a565b600260009054906101000a90046001600160a01b03166001600160a01b031663f06360066040518163ffffffff1660e01b815260040160006040518083038186803b15801561193757600080fd5b505afa15801561194b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561197457600080fd5b8101908080516040519392919084600160201b82111561199357600080fd5b9083019060208201858111156119a857600080fd5b8251600160201b8111828201881017156119c157600080fd5b82525081516020918201929091019080838360005b838110156119ee5781810151838201526020016119d6565b50505050905090810190601f168015611a1b5780820380516001836020036101000a031916815260200191505b50604090815233600090815260208181529190208551611a47966004909201955091019250905061221c565b50565b611a52611ea5565b8015611d6c576001600160a01b03821660009081526020819052604081206001810180546001600160a01b03191633179055600881018054600260ff199091161790556003810154909190611abd9063ffffffff600160401b8204811691600160201b900416612144565b60028084018281556001600160a01b038088166000908152602081905260409020865481546001600160a01b03199081169184169190911782556001808901548184018054909316941693909317905591548284015560038087018054918401805463ffffffff191663ffffffff938416178082558254600160201b9081900485160267ffffffff0000000019909116178082559154600160401b9081900490931690920263ffffffff60401b199091161790556004808701805495965087959394611b9e949286019391929182161561010002600019019091160461229a565b5060058201816005019080546001816001161561010002031660029004611bc692919061229a565b5060068201816006019080546001816001161561010002031660029004611bee92919061229a565b5060078201816007019080546001816001161561010002031660029004611c1692919061229a565b50600882810154908201805460ff9092169160ff19166001836004811115611c3a57fe5b0217905550506004805460408051631484968760e11b81526001600160a01b038981169482019490945290519290911692506329092d0e91602480830192600092919082900301818387803b158015611c9257600080fd5b505af1158015611ca6573d6000803e3d6000fd5b5050604080516020808252600c908201526b1050d2d393d5d3115111d15160a21b81830152905133935060008051602061447483398151915292509081900360600190a26005546040805163d3a5a03960e01b81526001600160a01b0387811660048301526b1050d2d393d5d3115111d15160a21b60248301529151919092169163d3a5a03991604480830192600092919082900301818387803b158015611d4d57600080fd5b505af1158015611d61573d6000803e3d6000fd5b505050505050611ea1565b6001600160a01b03828116600081815260208190526040808220600801805460ff1916600490811790915580548251631484968760e11b815291820194909452905192909316926329092d0e926024808301939282900301818387803b158015611dd557600080fd5b505af1158015611de9573d6000803e3d6000fd5b50506005546040805163d3a5a03960e01b81526001600160a01b038781166004830152671491529150d5115160c21b6024830152915191909216935063d3a5a0399250604480830192600092919082900301818387803b158015611e4c57600080fd5b505af1158015611e60573d6000803e3d6000fd5b5050604080516020808252600890820152671491529150d5115160c21b81830152905133935060008051602061447483398151915292509081900360600190a25b5050565b3373b8b76e5a4aebbe98d09b5deb92a9505a6df8f1fb14611ec557600080fd5b565b336000818152602081905260409020546001600160a01b03168114611a4757600080fd5b3360008181526020819052604090206008015460039060ff166004811115611f0f57fe5b14611f1957600080fd5b736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475604051611f3a90612172565b6001600160a01b03909116815260405190819003602001906000f080158015611f67573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039283161780825583831660009081526020818152604091829020915163218648eb60e01b8152600481019182526005909201805461010060018216150260001901169490940460248301819052929094169363218648eb939290918291604490910190849080156120305780601f1061200557610100808354040283529160200191612030565b820191906000526020600020905b81548152906001019060200180831161201357829003601f168201915b505092505050600060405180830381600087803b15801561205057600080fd5b505af1158015612064573d6000803e3d6000fd5b50506005546040805163d3a5a03960e01b81526001600160a01b0386811660048301527f4e657720417574686f72697a6174696f6e20436f6465205265717565737465646024830152915191909216935063d3a5a0399250604480830192600092919082900301818387803b1580156120dc57600080fd5b505af11580156120f0573d6000803e3d6000fd5b50506040805160208082526010908201526f50726f7661626c65205375636365737360801b8183015290516001600160a01b038516935060008051602061447483398151915292509081900360600190a250565b6000808360011415612160575066b1a2bc2ec50000820261216b565b50652d79883d200082025b9392505050565b61214a8061232a83390190565b50805460018160011615610100020316600290046000825580601f106121a55750611a47565b601f016020900490600052602060002090810190611a47919061230f565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820181905260e0820181905261010082018190526101208201529061014082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061225d57805160ff191683800117855561228a565b8280016001018555821561228a579182015b8281111561228a57825182559160200191906001019061226f565b5061229692915061230f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106122d3578054855561228a565b8280016001018555821561228a57600052602060002091601f016020900482015b8281111561228a5782548255916001019190600101906122f4565b610c7d91905b80821115612296576000815560010161231556fe608060405260405161214a38038061214a8339818101604052602081101561002657600080fd5b5051600180546001600160a01b0383166001600160a01b0319918216179091556006805490911633179055604080516020808252604b9082018190527f11a3fca63f87bd67d7f9f72b744acc8be2193705e7a734ac3a773d35d259e87b928291908201906120ff823960600191505060405180910390a150612052806100ad6000396000f3fe6080604052600436106100705760003560e01c806327dc297e1161004e57806327dc297e146103f257806338bbfa50146104aa5780633c90d572146105e7578063f06360061461079557610070565b80631a5947fd146100755780631eb2ad48146102aa578063218648eb1461034e575b600080fd5b6102a86004803603608081101561008b57600080fd5b810190602081018135600160201b8111156100a557600080fd5b8201836020820111156100b757600080fd5b803590602001918460018302840111600160201b831117156100d857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561012a57600080fd5b82018360208201111561013c57600080fd5b803590602001918460018302840111600160201b8311171561015d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156101af57600080fd5b8201836020820111156101c157600080fd5b803590602001918460018302840111600160201b831117156101e257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561023457600080fd5b82018360208201111561024657600080fd5b803590602001918460018302840111600160201b8311171561026757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061081f945050505050565b005b6102a8600480360360208110156102c057600080fd5b810190602081018135600160201b8111156102da57600080fd5b8201836020820111156102ec57600080fd5b803590602001918460018302840111600160201b8311171561030d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109b1945050505050565b6102a86004803603602081101561036457600080fd5b810190602081018135600160201b81111561037e57600080fd5b82018360208201111561039057600080fd5b803590602001918460018302840111600160201b831117156103b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b3d945050505050565b3480156103fe57600080fd5b506102a86004803603604081101561041557600080fd5b81359190810190604081016020820135600160201b81111561043657600080fd5b82018360208201111561044857600080fd5b803590602001918460018302840111600160201b8311171561046957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610bca945050505050565b3480156104b657600080fd5b506102a8600480360360608110156104cd57600080fd5b81359190810190604081016020820135600160201b8111156104ee57600080fd5b82018360208201111561050057600080fd5b803590602001918460018302840111600160201b8311171561052157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561057357600080fd5b82018360208201111561058557600080fd5b803590602001918460018302840111600160201b831117156105a657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c07945050505050565b6102a8600480360360608110156105fd57600080fd5b810190602081018135600160201b81111561061757600080fd5b82018360208201111561062957600080fd5b803590602001918460018302840111600160201b8311171561064a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561069c57600080fd5b8201836020820111156106ae57600080fd5b803590602001918460018302840111600160201b831117156106cf57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561072157600080fd5b82018360208201111561073357600080fd5b803590602001918460018302840111600160201b8311171561075457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c38945050505050565b3480156107a157600080fd5b506107aa610dc7565b6040805160208082528351818301528351919283929083019185019080838360005b838110156107e45781810151838201526020016107cc565b50505050905090810190601f1680156108115780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b476108446040518060400160405280600381526020016215549360ea1b815250610e72565b111561088857600080516020611f6e83398151915260405180806020018281038252604c815260200180611e8d604c913960600191505060405180910390a16109ab565b60606108af604051806060016040528060348152602001611f3a60349139858786866110be565b90506108d66040518060400160405280600381526020016215549360ea1b8152508261129e565b507f6ab7baf5a3b31c7e5d38291203112bba5c43cdb8b60a4b462a7c153713dd7753816040518080602001806020018381038352601d8152602001807f50726f7661626c65207175657279207761732073656e7420746f2e2e2e000000815250602001838103825284818151815260200191508051906020019080838360005b8381101561096e578181015183820152602001610956565b50505050905090810190601f16801561099b5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505b50505050565b476109d66040518060400160405280600381526020016215549360ea1b815250610e72565b1115610a1a57600080516020611f6e83398151915260405180806020018281038252604c815260200180611e8d604c913960600191505060405180910390a1610b3a565b6060610a3e6040518060a0016040528060618152602001611ed9606191398361165e565b9050610a656040518060400160405280600381526020016215549360ea1b8152508261129e565b507f6ab7baf5a3b31c7e5d38291203112bba5c43cdb8b60a4b462a7c153713dd7753816040518080602001806020018381038352601d8152602001807f50726f7661626c65207175657279207761732073656e7420746f2e2e2e000000815250602001838103825284818151815260200191508051906020019080838360005b83811015610afd578181015183820152602001610ae5565b50505050905090810190601f168015610b2a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505b50565b47610b626040518060400160405280600381526020016215549360ea1b815250610e72565b1115610ba657600080516020611f6e83398151915260405180806020018281038252604c815260200180611e8d604c913960600191505060405180910390a1610b3a565b6060610a3e6040518060800160405280605e8152602001611f8e605e91398361165e565b610bd2611719565b6001600160a01b0316336001600160a01b031614610bef57600080fd5b8051610c02906005906020840190611df4565b505050565b5050600080805260036020527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5550565b47610c5d6040518060400160405280600381526020016215549360ea1b815250610e72565b1115610ca157600080516020611f6e83398151915260405180806020018281038252604c815260200180611e8d604c913960600191505060405180910390a1610c02565b6060610cc7604051806060016040528060328152602001611fec60329139848685611902565b9050610cee6040518060400160405280600381526020016215549360ea1b8152508261129e565b507f6ab7baf5a3b31c7e5d38291203112bba5c43cdb8b60a4b462a7c153713dd7753816040518080602001806020018381038352601d8152602001807f50726f7661626c65207175657279207761732073656e7420746f2e2e2e000000815250602001838103825284818151815260200191508051906020019080838360005b83811015610d86578181015183820152602001610d6e565b50505050905090810190601f168015610db35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b6006546060906001600160a01b03163314610de157600080fd5b6005805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610e675780601f10610e3c57610100808354040283529160200191610e67565b820191906000526020600020905b815481529060010190602001808311610e4a57829003601f168201915b505050505090505b90565b6001546000906001600160a01b03161580610e9f5750600154610e9d906001600160a01b0316611a86565b155b15610eb057610eae6000611a8a565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f0057600080fd5b505af1158015610f14573d6000803e3d6000fd5b505050506040513d6020811015610f2a57600080fd5b50516000546001600160a01b03908116911614610fdd57600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f9157600080fd5b505af1158015610fa5573d6000803e3d6000fd5b505050506040513d6020811015610fbb57600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b6000805460405163524f388960e01b81526020600482018181528651602484015286516001600160a01b039094169463524f3889948894929384936044019290860191908190849084905b83811015611040578181015183820152602001611028565b50505050905090810190601f16801561106d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561108c57600080fd5b505af11580156110a0573d6000803e3d6000fd5b505050506040513d60208110156110b657600080fd5b505192915050565b606085858585856040516020018086805190602001908083835b602083106110f75780518252601f1990920191602091820191016110d8565b6001836020036101000a03801982511681845116808217855250505050505090500180602f60f81b81525060010185805190602001908083835b602083106111505780518252601f199092019160209182019101611131565b6001836020036101000a03801982511681845116808217855250505050505090500180602f60f81b81525060010184805190602001908083835b602083106111a95780518252601f19909201916020918201910161118a565b6001836020036101000a03801982511681845116808217855250505050505090500180602f60f81b81525060010183805190602001908083835b602083106112025780518252601f1990920191602091820191016111e3565b6001836020036101000a03801982511681845116808217855250505050505090500180602f60f81b81525060010182805190602001908083835b6020831061125b5780518252601f19909201916020918201910161123c565b6001836020036101000a03801982511681845116808217855250505050505090500195505050505050604051602081830303815290604052905095945050505050565b6001546000906001600160a01b031615806112cb57506001546112c9906001600160a01b0316611a86565b155b156112dc576112da6000611a8a565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561132c57600080fd5b505af1158015611340573d6000803e3d6000fd5b505050506040513d602081101561135657600080fd5b50516000546001600160a01b0390811691161461140957600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113bd57600080fd5b505af11580156113d1573d6000803e3d6000fd5b505050506040513d60208110156113e757600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b6000805460405163524f388960e01b81526020600482018181528751602484015287516001600160a01b039094169363524f38899389938392604490920191908501908083838b5b83811015611469578181015183820152602001611451565b50505050905090810190601f1680156114965780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156114b557600080fd5b505af11580156114c9573d6000803e3d6000fd5b505050506040513d60208110156114df57600080fd5b50519050670de0b6b3a764000062030d403a0201811115611504575060009050611658565b6000805460405163adf59f9960e01b8152600481018381526060602483019081528851606484015288516001600160a01b039094169463adf59f9994879491938b938b9391929091604481019160849091019060208701908083838b5b83811015611579578181015183820152602001611561565b50505050905090810190601f1680156115a65780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156115d95781810151838201526020016115c1565b50505050905090810190601f1680156116065780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561162757600080fd5b505af115801561163b573d6000803e3d6000fd5b50505050506040513d602081101561165257600080fd5b50519150505b92915050565b606082826040516020018083805190602001908083835b602083106116945780518252601f199092019160209182019101611675565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106116dc5780518252601f1990920191602091820191016116bd565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b6001546000906001600160a01b031615806117465750600154611744906001600160a01b0316611a86565b155b15611757576117556000611a8a565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156117a757600080fd5b505af11580156117bb573d6000803e3d6000fd5b505050506040513d60208110156117d157600080fd5b50516000546001600160a01b0390811691161461188457600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561183857600080fd5b505af115801561184c573d6000803e3d6000fd5b505050506040513d602081101561186257600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b6000809054906101000a90046001600160a01b03166001600160a01b031663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118d157600080fd5b505afa1580156118e5573d6000803e3d6000fd5b505050506040513d60208110156118fb57600080fd5b5051905090565b6060848484846040516020018085805190602001908083835b6020831061193a5780518252601f19909201916020918201910161191b565b6001836020036101000a03801982511681845116808217855250505050505090500180602f60f81b81525060010184805190602001908083835b602083106119935780518252601f199092019160209182019101611974565b6001836020036101000a03801982511681845116808217855250505050505090500180602f60f81b81525060010183805190602001908083835b602083106119ec5780518252601f1990920191602091820191016119cd565b6001836020036101000a03801982511681845116808217855250505050505090500180602f60f81b81525060010182805190602001908083835b60208310611a455780518252601f199092019160209182019101611a26565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040529050949350505050565b3b90565b6000611658600080611aaf731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611a86565b1115611b0e57600180546001600160a01b031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81526a195d1a17db585a5b9b995d60aa1b6020820152611b0690611ddd565b506001610e6f565b6000611b2d73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611a86565b1115611b8557600180546001600160a01b03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81526b6574685f726f707374656e3360a01b6020820152611b0690611ddd565b6000611ba473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611a86565b1115611bf957600180546001600160a01b03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981526832ba342fb5b7bb30b760b91b6020820152611b0690611ddd565b6000611c1873146500cfd35b22e4a392fe0adc06de1a1368ed48611a86565b1115611c6f57600180546001600160a01b03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81526a6574685f72696e6b65627960a81b6020820152611b0690611ddd565b6000611c8e73a2998efd205fb9d4b4963afb70778d6354ad3a41611a86565b1115611ce457600180546001600160a01b03191673a2998efd205fb9d4b4963afb70778d6354ad3a4117905560408051808201909152600a8152696574685f676f65726c6960b01b6020820152611b0690611ddd565b6000611d03736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611a86565b1115611d355750600180546001600160a01b031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475178155610e6f565b6000611d547320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611a86565b1115611d865750600180546001600160a01b0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf178155610e6f565b6000611da57351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611a86565b1115611dd75750600180546001600160a01b0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa178155610e6f565b50600090565b8051611df0906002906020840190611df4565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e3557805160ff1916838001178555611e62565b82800160010185558215611e62579182015b82811115611e62578251825591602001919060010190611e47565b50611e6e929150611e72565b5090565b610e6f91905b80821115611e6e5760008155600101611e7856fe50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f7220746865207175657279206665652168747470733a2f2f6338323739336430376261632e6e67726f6b2e696f2f6d6f636b6170692f757365722f64656c6574652f6158725744706d4a62724d52717967325870486d664f4d563576595662436972666c5377305a49435153382533442f68747470733a2f2f6338323739336430376261632e6e67726f6b2e696f2f6d6f636b6170692f61737365742f7265676973746572746f97619dd4e795da5586af48fcbd8a87f2860948dec93277b5b67b2f105cab68747470733a2f2f6338323739336430376261632e6e67726f6b2e696f2f6d6f636b6170692f757365722f6e65772f6158725744706d4a62724d52717967325870486d664f4d563576595662436972666c5377305a49435153382533442f68747470733a2f2f6338323739336430376261632e6e67726f6b2e696f2f6d6f636b6170692f61737365742f64656c657465a265627a7a7231582001a19aed906c71da57942a8e7d38a36e07813fb6f645378b8b41f2c64896894d64736f6c634300050f0032436f6e7374727563746f722077617320696e697469617465642e2043616c6c202767657441757468636f646528292720746f2073656e64207468652050726f7661626c652051756572792e618191079b759c0e8f74514441817b7d0c6dee793d7edc2ac0fbff12ca88f893a265627a7a72315820b9747ccfa938ddf6f2caa8fe02dd0a580224e53aaa4566dc5ca1c2de99de79a064736f6c634300050f0032";

    public static final String FUNC_ACKNOWLEDGE_REQUEST = "Acknowledge_Request";

    public static final String FUNC_CREATE_RQUEST = "Create_Rquest";

    public static final String FUNC_DEL_RECORD = "del_Record";

    public static final String FUNC_GET_AUTHCODE = "get_Authcode";

    public static final String FUNC_GET_REQUEST = "get_Request";

    public static final String FUNC_GET_STATUS = "get_Status";

    public static final String FUNC_GET_TOKENAMOUNT = "get_TokenAmount";

    public static final String FUNC_QUERY_REQUEST = "query_Request";

    public static final String FUNC_SENDTOKEN = "sendToken";

    public static final String FUNC_UPD_AUTHCODE = "upd_Authcode";

    public static final Event FUNCTIONCALLED_EVENT = new Event("FunctionCalled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}));
    ;

    @Deprecated
    protected Main(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Main(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Main(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Main(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<FunctionCalledEventResponse> getFunctionCalledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FUNCTIONCALLED_EVENT, transactionReceipt);
        ArrayList<FunctionCalledEventResponse> responses = new ArrayList<FunctionCalledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FunctionCalledEventResponse typedResponse = new FunctionCalledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._address = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._name = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FunctionCalledEventResponse> functionCalledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FunctionCalledEventResponse>() {
            @Override
            public FunctionCalledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FUNCTIONCALLED_EVENT, log);
                FunctionCalledEventResponse typedResponse = new FunctionCalledEventResponse();
                typedResponse.log = log;
                typedResponse._address = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._name = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FunctionCalledEventResponse> functionCalledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FUNCTIONCALLED_EVENT));
        return functionCalledEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> Acknowledge_Request(String _reqAddress, Boolean _Acknowledged) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ACKNOWLEDGE_REQUEST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _reqAddress), 
                new org.web3j.abi.datatypes.Bool(_Acknowledged)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> Create_Rquest(BigInteger _orderDate, BigInteger _orderQty, BigInteger _level, String _name, String _email, String _clientID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATE_RQUEST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint32(_orderDate), 
                new org.web3j.abi.datatypes.generated.Uint32(_orderQty), 
                new org.web3j.abi.datatypes.generated.Uint32(_level), 
                new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_email), 
                new org.web3j.abi.datatypes.Utf8String(_clientID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> del_Record(String _client) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEL_RECORD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _client)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> get_Authcode() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GET_AUTHCODE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger>> get_Request() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GET_REQUEST, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint8>() {}));
        return new RemoteFunctionCall<Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger>>(function,
                new Callable<Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (String) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue(), 
                                (String) results.get(9).getValue(), 
                                (BigInteger) results.get(10).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> get_Status() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GET_STATUS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> get_TokenAmount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GET_TOKENAMOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger>> query_Request(String _client) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_QUERY_REQUEST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _client)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint8>() {}));
        return new RemoteFunctionCall<Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger>>(function,
                new Callable<Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple11<String, String, BigInteger, BigInteger, BigInteger, BigInteger, String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (String) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue(), 
                                (String) results.get(9).getValue(), 
                                (BigInteger) results.get(10).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> sendToken(BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SENDTOKEN, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> upd_Authcode() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPD_AUTHCODE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Main load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Main(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Main load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Main(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Main load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Main(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Main load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Main(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Main> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _intraAddress, String _assets, String _openrequests, String _history) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _intraAddress), 
                new org.web3j.abi.datatypes.Address(160, _assets), 
                new org.web3j.abi.datatypes.Address(160, _openrequests), 
                new org.web3j.abi.datatypes.Address(160, _history)));
        return deployRemoteCall(Main.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<Main> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _intraAddress, String _assets, String _openrequests, String _history) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _intraAddress), 
                new org.web3j.abi.datatypes.Address(160, _assets), 
                new org.web3j.abi.datatypes.Address(160, _openrequests), 
                new org.web3j.abi.datatypes.Address(160, _history)));
        return deployRemoteCall(Main.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Main> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _intraAddress, String _assets, String _openrequests, String _history) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _intraAddress), 
                new org.web3j.abi.datatypes.Address(160, _assets), 
                new org.web3j.abi.datatypes.Address(160, _openrequests), 
                new org.web3j.abi.datatypes.Address(160, _history)));
        return deployRemoteCall(Main.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Main> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _intraAddress, String _assets, String _openrequests, String _history) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _intraAddress), 
                new org.web3j.abi.datatypes.Address(160, _assets), 
                new org.web3j.abi.datatypes.Address(160, _openrequests), 
                new org.web3j.abi.datatypes.Address(160, _history)));
        return deployRemoteCall(Main.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class FunctionCalledEventResponse extends BaseEventResponse {
        public String _address;

        public String _name;
    }
}
